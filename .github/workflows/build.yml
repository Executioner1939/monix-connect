name: build

on: [push, pull_request]

jobs:
  
  tests:
    name: scala-${{ matrix.scala }} jdk-${{ matrix.java }} tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        java: [8, 11]
        scala: [2.12.11, 2.13.1]

    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: "adopt@1.${{ matrix.java }}"

      - name: Cache SBT Coursier directory
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier/v1
          key: ${{ runner.os }}-coursier-${{ hashFiles('**/*.sbt') }}
          restore-keys: |
            ${{ runner.os }}-coursier-
      - name: Cache SBT directory
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: |
            ${{ runner.os }}-sbt-${{ hashFiles('project/build.properties') }}-${{ hashFiles('project/plugins.sbt') }}
          restore-keys: ${{ runner.os }}-sbt-

      - name: Run checks
        run:  sbt scalafmtCheckAll
      - name: Run Unit Tests for Java ${{ matrix.java }}, Scala ${{ matrix.scala }}
        run: sbt test
      - name: Start docker dependencies
        run:  sh start-dependencies.sh
      - name: Run Functional Tests for Java ${{ matrix.java }}, Scala ${{ matrix.scala }}
        run: sbt it:test
 
  mima:
    name: Mima binary compatibility test
    needs: tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8 ]
        scala: [ 2.12.11 ]

    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: "adopt@1.${{ matrix.java }}"
     
      - name: Run Mima binary compatibility test for Java ${{ matrix.java }} and Scala ${{ matrix.scala }}
        run: sbt mimaReportBinaryIssues
                   
  publish:
    name: Publish 
    needs: [ tests, mima ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v2
      - uses: olafurpg/setup-gpg@v2
      - name: Publish release ${{ github.ref }}
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      - name: Publis documentation web page
        run: |
          ./.github/scripts/create-web-site.sh
        env:
          GIT_DEPLOY_KEY: ${{ secrets.GIT_DEPLOY_KEY }}
  
